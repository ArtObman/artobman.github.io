"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2159],{5680:(e,n,t)=>{t.d(n,{xA:()=>d,yg:()=>g});var r=t(6540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(t),m=i,g=p["".concat(s,".").concat(m)]||p[m]||u[m]||a;return t?r.createElement(g,o(o({ref:n},d),{},{components:t})):r.createElement(g,o({ref:n},d))}));function g(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[p]="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6472:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=t(8168),i=(t(6540),t(5680));const a={title:"Coin Flip"},o=void 0,l={unversionedId:"fun/coinflip",id:"fun/coinflip",title:"Coin Flip",description:"This command flips a coin landing on heads or tails to lose or double the bet.",source:"@site/docs/fun/coinflip.md",sourceDirName:"fun",slug:"/fun/coinflip",permalink:"/fun/coinflip",draft:!1,editUrl:"https://github.com/yagpdb-cc/yagpdb-cc/edit/master/website/docs/fun/coinflip.md",tags:[],version:"current",frontMatter:{title:"Coin Flip"},sidebar:"sidebar",previous:{title:"Choose Item",permalink:"/fun/choose"},next:{title:"Deathmatch Game",permalink:"/fun/deathmatch"}},s={},c=[{value:"Trigger",id:"trigger",level:2},{value:"Usage",id:"usage",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Code",id:"code",level:2},{value:"Author",id:"author",level:2}],d={toc:c},p="wrapper";function u(e){let{components:n,...t}=e;return(0,i.yg)(p,(0,r.A)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("p",null,"This command flips a coin landing on heads or tails to lose or double the bet."),(0,i.yg)("admonition",{type:"caution"},(0,i.yg)("p",{parentName:"admonition"},"This command assumes that you have an existing currency system set up.")),(0,i.yg)("h2",{id:"trigger"},"Trigger"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Type:")," ",(0,i.yg)("inlineCode",{parentName:"p"},"Command"),(0,i.yg)("br",null),"\n",(0,i.yg)("strong",{parentName:"p"},"Trigger:")," ",(0,i.yg)("inlineCode",{parentName:"p"},"coinflip")),(0,i.yg)("h2",{id:"usage"},"Usage"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"-coinflip <heads/tails> <bet>")," - Flips the coin, betting ",(0,i.yg)("inlineCode",{parentName:"li"},"bet")," on the result being ",(0,i.yg)("inlineCode",{parentName:"li"},"heads"),"/",(0,i.yg)("inlineCode",{parentName:"li"},"tails"),".")),(0,i.yg)("h2",{id:"configuration"},"Configuration"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"\ud83d\udccc ",(0,i.yg)("inlineCode",{parentName:"p"},"$CHANNEL"),(0,i.yg)("br",null),"\nChannel ID where the game is played. Set to ",(0,i.yg)("inlineCode",{parentName:"p"},".Channel.ID")," to allow play in any channel.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"$MIN_BET"),(0,i.yg)("br",null),"\nMinimum amount users can bet.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"$MAX_BET"),(0,i.yg)("br",null),"\nMaximum amount users can bet.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"\ud83d\udccc ",(0,i.yg)("inlineCode",{parentName:"p"},"$DB_KEY"),(0,i.yg)("br",null),"\nDatabase entry name where the currency is stored.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("inlineCode",{parentName:"p"},"$COOLDOWN"),(0,i.yg)("br",null),"\nCooldown for the command in seconds."))),(0,i.yg)("h2",{id:"code"},"Code"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-gotmpl",metastring:"file=../../../src/fun/coinflip.go.tmpl",file:"../../../src/fun/coinflip.go.tmpl"},'{{/*\n    Coin-flip game that integrates with an existing currency system.\n    See <https://yagpdb-cc.github.io/fun/coinflip> for more information.\n\n    Author: DaviiD1337 <https://github.com/DaviiD1337>\n    Co-Author: H1nr1 <https://github.com/H1nr1>\n*/}}\n\n{{/* Configuration variables start */}}\n{{ $CHANNEL := .Channel.ID }}\n{{ $MIN_BET := 100 }}\n{{ $MAX_BET := 500 }}\n{{ $DB_KEY := "CREDITS" }}\n{{ $COOLDOWN := 5 }}\n{{/* Configuration variables end */}}\n\n{{ $err := false }}\n{{ $img := "https://cdn.discordapp.com/attachments/707661790443733022/782710794634264616/d74906d39a1964e7d07555e7601b06ad.gif" }}\n{{ $heads := "https://cdn.discordapp.com/attachments/707661790443733022/782713935341027358/cap.png" }}\n{{ $tails := "https://cdn.discordapp.com/attachments/707661790443733022/782713937979637760/pajura.png" }}\n{{ $embed := sdict "author" (sdict "name" .User.Username "icon_url" (.User.AvatarURL "256")) }}\n\n{{ if not .ExecData }}\n    {{ $choice := reFind `(?i)head|tail` .StrippedMsg | lower }}\n    {{ $bet := reFind `\\d+` .StrippedMsg | toInt }}\n\n    {{ if not (eq (len .CmdArgs) 2) }}\n        {{ $err = printf "Syntax: **%scoinflip <heads/tails> <bet>**" .ServerPrefix }}\n\n    {{ else if not $choice }}\n        {{ $err = "You can only choose from **heads** or **tails**" }}\n\n    {{ else if not $bet }}\n        {{ $err = printf "Please provide a bet between **%d** and **%d**" $MIN_BET $MAX_BET }}\n\n    {{ else if or (lt $bet $MIN_BET) (gt $bet $MAX_BET) }}\n        {{ $err = printf "Bet must be minimum **%d** and maximum **%d**!" $MIN_BET $MAX_BET }}\n\n    {{ else if $cd := dbGet .User.ID "CF_cooldown" }}\n        {{ $err = print "You need to wait **" ($cd.ExpiresAt.Sub currentTime | humanizeDurationSeconds) "** to use this command again." }}\n\n    {{ else if lt ($userBalance := (dbGet .User.ID $DB_KEY).Value | toInt) $bet }}\n        {{ $err = printf "You dont have **%d** credits.\\nYou only have **%d** credits." $bet $userBalance }}\n\n    {{ else if dbGet .User.ID "CF_isFlipping" }}\n        {{ $err = "You can use this command once your last coin has landed!" }}\n    {{ end }}\n\n    {{ if $err }}\n        {{ $embed.Set "description" $err }}\n        {{ $embed.Set "color" 16488706 }}\n        {{ $message := sendMessageRetID nil (cembed $embed) }}\n        {{ deleteMessage .Channel.ID $message 5 }}\n        {{ deleteTrigger }}\n        {{ return }}\n    {{ end }}\n\n    {{/* flip may proceed */}}\n    {{ dbSet .User.ID "CF_isFlipping" true }}\n    {{ $embed.Set "image" (sdict "url" $img) }}\n    {{ $embed.Set "color" 16765696 }}\n    {{ $embed.Set "description" "**The coin is in the air... Please wait for it to land...**" }}\n    {{ $m := sendMessageRetID $CHANNEL (cembed $embed) }}\n    {{ $randChannel := (index .Guild.Channels (randInt (len .Guild.Channels))).ID }}\n    {{ scheduleUniqueCC .CCID $randChannel 3 .User.ID (sdict "channel" $CHANNEL "m" $m "b" $bet "c" $choice )}}\n\n{{ else }}\n    {{ $channel := .ExecData.channel }}\n    {{ $m := .ExecData.m }}\n    {{ $bet := .ExecData.b }}\n    {{ $choice := print .ExecData.c "s" }}\n\n    {{ $result := (dict \n        0 (sdict "side" "heads" "img" $heads)\n        1 (sdict "side" "tails" "img" $tails)\n    ).Get (randInt 2) }}\n\n    {{ $embed.Set "image" (sdict "url" $result.img) }}\n\n    {{ if eq $choice $result.side }}\n        {{ $result.Set "WL" "won" }}\n        {{ $result.Set "diff" (mult $bet 2) }}\n        {{ $embed.Set "color" 40811 }}\n    {{ else }}\n        {{ $result.Set "WL" "lost" }}\n        {{ $result.Set "diff" $bet }}\n        {{ $bet = mult $bet -1 }}\n        {{ $embed.Set "color" 16488706 }}\n    {{ end }}\n\n    {{ $balance := dbIncr .User.ID $DB_KEY $bet | toInt }}\n    {{ $embed.Set "description" (printf "**----------**\\nYou chose **%s** | The coin landed on **%s**.\\nYou %s **%d** %s.\\nNow you have **%d** %s.\\n**----------**" $choice $result.side $result.WL $result.diff (lower $DB_KEY) $balance (lower $DB_KEY)) }}\n    {{ dbSetExpire .User.ID "CF_cooldown" true $COOLDOWN }}\n    {{ dbDel .User.ID "CF_isFlipping" }}\n    {{ editMessage $channel $m (cembed $embed) }}\n{{ end }}\n')),(0,i.yg)("h2",{id:"author"},"Author"),(0,i.yg)("p",null,"This custom command was written by ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/DaviiD1337"},"@DaviiD1337")," with contributions from ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/H1nr1"},"@H1nr1"),"."))}u.isMDXComponent=!0}}]);