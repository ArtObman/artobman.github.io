"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2304],{5680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>d});var r=t(6540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),c=s(t),m=a,d=c["".concat(l,".").concat(m)]||c[m]||g[m]||o;return t?r.createElement(d,i(i({ref:n},u),{},{components:t})):r.createElement(d,i({ref:n},u))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p[c]="string"==typeof e?e:a,i[1]=p;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2621:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var r=t(8168),a=(t(6540),t(5680));const o={title:"Repeat Phrase"},i=void 0,p={unversionedId:"fun/repeat",id:"fun/repeat",title:"Repeat Phrase",description:"This command repeats text provided.",source:"@site/docs/fun/repeat.md",sourceDirName:"fun",slug:"/fun/repeat",permalink:"/fun/repeat",draft:!1,editUrl:"https://github.com/yagpdb-cc/yagpdb-cc/edit/master/website/docs/fun/repeat.md",tags:[],version:"current",frontMatter:{title:"Repeat Phrase"},sidebar:"sidebar",previous:{title:"Mock Text",permalink:"/fun/mock"},next:{title:"Slot Machine",permalink:"/fun/slot-machine"}},l={},s=[{value:"Trigger",id:"trigger",level:2},{value:"Usage",id:"usage",level:2},{value:"Code",id:"code",level:2},{value:"Author",id:"author",level:2}],u={toc:s},c="wrapper";function g(e){let{components:n,...t}=e;return(0,a.yg)(c,(0,r.A)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"This command repeats text provided."),(0,a.yg)("h2",{id:"trigger"},"Trigger"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Type:")," ",(0,a.yg)("inlineCode",{parentName:"p"},"Command"),(0,a.yg)("br",null),"\n",(0,a.yg)("strong",{parentName:"p"},"Trigger:")," ",(0,a.yg)("inlineCode",{parentName:"p"},"repeat")),(0,a.yg)("h2",{id:"usage"},"Usage"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"-repeat <phrase>")," - Repeats ",(0,a.yg)("inlineCode",{parentName:"li"},"phrase")," 5 times (you can change this in the code). If ",(0,a.yg)("inlineCode",{parentName:"li"},"phrase")," has spaces in it, you should put quotes around it; for example, ",(0,a.yg)("inlineCode",{parentName:"li"},'-repeat "hello world"'),"."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"-repeat <amount> <phrase>")," - Repeats ",(0,a.yg)("inlineCode",{parentName:"li"},"phrase")," the specified number of times.")),(0,a.yg)("h2",{id:"code"},"Code"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-gotmpl",metastring:"file=../../../src/fun/repeat.go.tmpl",file:"../../../src/fun/repeat.go.tmpl"},'{{/*\n    Repeats a phrase.\n    See <https://yagpdb-cc.github.io/fun/repeat> for more information.\n\n    Author: jo3-l <https://github.com/jo3-l>\n*/}}\n\n{{ $msg := "" }}\n{{ if eq (len .CmdArgs) 1 }}\n    {{ $phrase := index .CmdArgs 0 }}\n    {{ range seq 0 5 }}\n        {{- $msg = joinStr "\\n" $msg $phrase -}}\n    {{ end }}\n    {{ sendMessage nil $msg }}\n{{ else if .CmdArgs }}\n    {{ $count := index .CmdArgs 0 | toInt }}\n    {{ $phrase := slice .CmdArgs 1 | joinStr " " }}\n    {{ if and $count (le $count 2000) }}\n        {{ range seq 0 $count }}\n            {{- $msg = joinStr "\\n" $msg $phrase -}}\n        {{ end }}\n        {{ if le (len $msg) 2000 }} {{ sendMessage nil $msg }}\n        {{ else }} That message was too long! {{ end }}\n    {{ else }}\n        **Syntax:** `-repeat <amount> <phrase>`\n    {{ end }}\n{{ else }}\n    **Syntax:** `-repeat <amount> <phrase>`\n{{ end }}\n')),(0,a.yg)("h2",{id:"author"},"Author"),(0,a.yg)("p",null,"This custom command was written by ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/jo3-l"},"@jo3-l"),"."))}g.isMDXComponent=!0}}]);