"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8139],{5680:(e,t,r)=>{r.d(t,{xA:()=>p,yg:()=>g});var n=r(6540);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(r),d=o,g=m["".concat(s,".").concat(d)]||m[d]||u[d]||a;return r?n.createElement(g,l(l({ref:t},p),{},{components:r})):n.createElement(g,l({ref:t},p))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[m]="string"==typeof e?e:o,l[1]=i;for(var c=2;c<a;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4518:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var n=r(8168),o=(r(6540),r(5680));const a={title:"Get Username Color"},l=void 0,i={unversionedId:"code-snippets/get-username-color",id:"code-snippets/get-username-color",title:"Get Username Color",description:"This code snippet gets the display colour of a member.",source:"@site/docs/code-snippets/get-username-color.md",sourceDirName:"code-snippets",slug:"/code-snippets/get-username-color",permalink:"/code-snippets/get-username-color",draft:!1,editUrl:"https://github.com/yagpdb-cc/yagpdb-cc/edit/master/website/docs/code-snippets/get-username-color.md",tags:[],version:"current",frontMatter:{title:"Get Username Color"},sidebar:"sidebar",previous:{title:"Binary Search",permalink:"/code-snippets/binary-search"},next:{title:"Ordinal",permalink:"/code-snippets/ordinal"}},s={},c=[{value:"Code",id:"code",level:2},{value:"Usage",id:"usage",level:2},{value:"Getting the color for a member other than the context member",id:"getting-the-color-for-a-member-other-than-the-context-member",level:3},{value:"Author",id:"author",level:2}],p={toc:c},m="wrapper";function u(e){let{components:t,...r}=e;return(0,o.yg)(m,(0,n.A)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"This code snippet gets the display colour of a member."),(0,o.yg)("h2",{id:"code"},"Code"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-gotmpl",metastring:"file=../../../src/code_snippets/get_username_color.go.tmpl",file:"../../../src/code_snippets/get_username_color.go.tmpl"},"{{/*\n    Gets the display colour for the current member.\n    See <https://yagpdb-cc.github.io/code-snippets/get-username-color> for more information.\n\n    Author: buthed010203 <https://github.com/buthed010203>\n*/}}\n\n{{$col := 16777215}}\n{{$p := 0}}\n{{$r := .Member.Roles}}\n{{range .Guild.Roles}}\n    {{- if and (in $r .ID) (.Color) (lt $p .Position)}}\n        {{- $p = .Position}}\n        {{- $col = .Color}}\n    {{- end -}}\n{{end}}\n")),(0,o.yg)("h2",{id:"usage"},"Usage"),(0,o.yg)("p",null,"First, copy the above snippet just above where you want to get the username color. Then, you can simply reference ",(0,o.yg)("inlineCode",{parentName:"p"},"$col"),", which will be the decimal display color of the member."),(0,o.yg)("p",null,"For example, the following code uses it for an embed:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-gotmpl",metastring:"{4}","{4}":!0},'{{/* code snippet here */}}\n{{sendMessage nil (cembed\n    "title" (print "Hello " .User.Username "!")\n    "color" $col\n)}}\n')),(0,o.yg)("h3",{id:"getting-the-color-for-a-member-other-than-the-context-member"},"Getting the color for a member other than the context member"),(0,o.yg)("p",null,"Let's say you want to get the color of a member that isn't the member that triggered the command. All you would have to change is the following:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-diff",metastring:"{4}","{4}":!0},"{{/* rest of code snippet */}}\n{{$p := 0}}\n- {{$r := .Member.Roles}}\n+ {{$r := $member.Roles}}\n{{range .Guild.Roles}}\n{{/* rest of code snippet */}}\n")),(0,o.yg)("p",null,"This would get the display color of ",(0,o.yg)("inlineCode",{parentName:"p"},"$member"),", rather than the triggering member."),(0,o.yg)("h2",{id:"author"},"Author"),(0,o.yg)("p",null,"This code snippet was written by ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/buthed010203"},"@buthed010203"),"."))}u.isMDXComponent=!0}}]);