"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7396],{5680:(e,t,n)=>{n.d(t,{xA:()=>s,yg:()=>d});var r=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=p(n),g=o,d=u["".concat(c,".").concat(g)]||u[g]||m[g]||l;return n?r.createElement(d,a(a({ref:t},s),{},{components:n})):r.createElement(d,a({ref:t},s))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,a=new Array(l);a[0]=g;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:o,a[1]=i;for(var p=2;p<l;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},6368:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var r=n(8168),o=(n(6540),n(5680));const l={title:"Mock Text"},a=void 0,i={unversionedId:"fun/mock",id:"fun/mock",title:"Mock Text",description:"This command mocks text which is given (capitalizes every second letter, small-cases all other letters).",source:"@site/docs/fun/mock.md",sourceDirName:"fun",slug:"/fun/mock",permalink:"/fun/mock",draft:!1,editUrl:"https://github.com/yagpdb-cc/yagpdb-cc/edit/master/website/docs/fun/mock.md",tags:[],version:"current",frontMatter:{title:"Mock Text"},sidebar:"sidebar",previous:{title:"Meme Generator",permalink:"/fun/meme"},next:{title:"Repeat Phrase",permalink:"/fun/repeat"}},c={},p=[{value:"Trigger",id:"trigger",level:2},{value:"Usage",id:"usage",level:2},{value:"Example",id:"example",level:3},{value:"Code",id:"code",level:2},{value:"Author",id:"author",level:2}],s={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,o.yg)(u,(0,r.A)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"This command mocks text which is given (capitalizes every second letter, small-cases all other letters)."),(0,o.yg)("h2",{id:"trigger"},"Trigger"),(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"Type:")," ",(0,o.yg)("inlineCode",{parentName:"p"},"Command"),(0,o.yg)("br",null),"\n",(0,o.yg)("strong",{parentName:"p"},"Trigger:")," ",(0,o.yg)("inlineCode",{parentName:"p"},"mock")),(0,o.yg)("h2",{id:"usage"},"Usage"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"-mock <text>")," - Mocks the text given.")),(0,o.yg)("h3",{id:"example"},"Example"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"-mock hello world\n")),(0,o.yg)("p",null,"Results in ",(0,o.yg)("inlineCode",{parentName:"p"},"hElLo WoRlD"),"."),(0,o.yg)("h2",{id:"code"},"Code"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-gotmpl",metastring:"file=../../../src/fun/mock.go.tmpl",file:"../../../src/fun/mock.go.tmpl"},'{{/*\n    Mocks text (capitalizes every second letter, lowercases all other letters).\n    See <https://yagpdb-cc.github.io/fun/mock> for more information.\n\n    Author: jo3-l <https://github.com/jo3-l>\n*/}}\n\n{{ with .StrippedMsg }}\n    {{ $out := "" }}\n    {{ range $k, $v := split (lower .) "" }}\n        {{- if mod $k 2 }} {{- $out = joinStr "" $out (upper $v) }}\n        {{- else }} {{- $out = joinStr "" $out $v }} {{- end -}}\n    {{ end }}\n    {{ sendMessage nil (cembed\n        "description" $out\n        "thumbnail" (sdict "url" "https://cdn.discordapp.com/emojis/316315555453730817.png?v=1")\n        "color" 16776960\n    ) }}\n{{ else }}\n    Please provide some text for me to mock.\n{{ end }}\n')),(0,o.yg)("h2",{id:"author"},"Author"),(0,o.yg)("p",null,"This custom command was written by ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/jo3-l"},"@jo3-l"),"."))}m.isMDXComponent=!0}}]);