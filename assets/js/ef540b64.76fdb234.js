"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5993],{5680:(e,t,i)=>{i.d(t,{xA:()=>g,yg:()=>c});var n=i(6540);function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function o(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function a(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?o(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,n,r=function(e,t){if(null==e)return{};var i,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)i=o[n],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)i=o[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var m=n.createContext({}),s=function(e){var t=n.useContext(m),i=t;return e&&(i="function"==typeof e?e(t):a(a({},t),e)),i},g=function(e){var t=s(e.components);return n.createElement(m.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var i=e.components,r=e.mdxType,o=e.originalType,m=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),d=s(i),u=r,c=d["".concat(m,".").concat(u)]||d[u]||p[u]||o;return i?n.createElement(c,a(a({ref:t},g),{},{components:i})):n.createElement(c,a({ref:t},g))}));function c(e,t){var i=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=i.length,a=new Array(o);a[0]=u;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l[d]="string"==typeof e?e:r,a[1]=l;for(var s=2;s<o;s++)a[s]=i[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,i)}u.displayName="MDXCreateElement"},9232:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>m,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=i(8168),r=(i(6540),i(5680));const o={title:"Big Emoji v1"},a=void 0,l={unversionedId:"utilities/big-emoji-v1",id:"utilities/big-emoji-v1",title:"Big Emoji v1",description:"This command enlarges emojis.",source:"@site/docs/utilities/big-emoji-v1.md",sourceDirName:"utilities",slug:"/utilities/big-emoji-v1",permalink:"/utilities/big-emoji-v1",draft:!1,editUrl:"https://github.com/yagpdb-cc/yagpdb-cc/edit/master/website/docs/utilities/big-emoji-v1.md",tags:[],version:"current",frontMatter:{title:"Big Emoji v1"},sidebar:"sidebar",previous:{title:"Overview",permalink:"/utilities/overview"},next:{title:"Big Emoji v2",permalink:"/utilities/big-emoji-v2"}},m={},s=[{value:"Trigger",id:"trigger",level:2},{value:"Usage",id:"usage",level:2},{value:"Code",id:"code",level:2},{value:"Author",id:"author",level:2}],g={toc:s},d="wrapper";function p(e){let{components:t,...i}=e;return(0,r.yg)(d,(0,n.A)({},g,i,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"This command enlarges emojis."),(0,r.yg)("h2",{id:"trigger"},"Trigger"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Type:")," ",(0,r.yg)("inlineCode",{parentName:"p"},"Regex"),(0,r.yg)("br",null),"\n",(0,r.yg)("strong",{parentName:"p"},"Trigger:")," ",(0,r.yg)("inlineCode",{parentName:"p"},"\\A(-|<@!?204255221017214977>\\s*)(be|big-?emo(te|ji))(\\s+|\\z)(\\s+|\\z)")),(0,r.yg)("h2",{id:"usage"},"Usage"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"-bigemoji <emoji>")," - Enlarges the emoji provided. Can be either a Discord default emoji or a custom emoji.")),(0,r.yg)("admonition",{title:"Aliases",type:"tip"},(0,r.yg)("p",{parentName:"admonition"},"Instead of ",(0,r.yg)("inlineCode",{parentName:"p"},"bigemoji"),", you can also use ",(0,r.yg)("inlineCode",{parentName:"p"},"be"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"bigemote"),", ",(0,r.yg)("inlineCode",{parentName:"p"},"big-emote"),", and ",(0,r.yg)("inlineCode",{parentName:"p"},"big-emoji"),".")),(0,r.yg)("h2",{id:"code"},"Code"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-gotmpl",metastring:"file=../../../src/utilities/big_emoji.go.tmpl",file:"../../../src/utilities/big_emoji.go.tmpl"},'{{/*\n    Allows you to enlarge emojis.\n    See <https://yagpdb-cc.github.io/utilities/big-emoji-v1> for more information.\n\n    Author: jo3-l <https://github.com/jo3-l>, Satty9361 <https://github.com/Satty9361>\n*/}}\n\n{{ if .CmdArgs }}\n    {{ $embed := sdict }} {{ $emoji := index .CmdArgs 0 }}\n        {{ if reFind `\\p{So}|.\\x{20e3}` $emoji }}\n            {{ $emoji_U := "" }}\n            {{ $url := "https://raw.githubusercontent.com/iamcal/emoji-data/master/img-twitter-64/" }}\n            {{- range toRune $emoji }}\n                {{- $emoji_U = joinStr "-" $emoji_U (printf "%04x" .) }}\n            {{- end -}}\n            {{ $url = joinStr "" $url $emoji_U ".png" }}\n            {{ $embed.Set "image"  (sdict "url" $url) }}\n        {{ else }}\n            {{ with reFindAllSubmatches `<(a)?:[\\w~]+:(\\d+)>` $emoji }}\n                {{ $animated := index . 0 1 }}\n                {{ $id := index . 0 2 }}\n                {{ $ext := ".png" }}\n                {{ if $animated }} {{ $ext = ".gif" }} {{ end }}\n                {{ $embed.Set "image"  (sdict "url" (printf "https://cdn.discordapp.com/emojis/%s%s" $id $ext)) }}\n            {{ end }}\n        {{ end }}\n        \n        {{$ID := 0}}\n        {{if $embed}}\n            {{ $embed.Set "color" 0x39ff14 }}\n            {{ $embed.Set "author" (sdict "name" .User.Username "icon_url" (.User.AvatarURL "256")) }}\n            {{ $ID = sendMessageRetID nil (cembed $embed) }}\n        {{ end }}\n    \n        {{ sleep 1 }} {{/* This just puts a standard output when no matching image is found. You can also use deleteMessage here */}}\n        {{ with getMessage nil $ID }}\n            {{ if not (index .Embeds 0).Image.Width }}\n                {{ $embed.Set "description" $emoji}} {{ $embed.Del "image" }}\n                {{ editMessage nil $ID (cembed $embed) }}\n            {{ end }}\n        {{ end }}\n{{ end }}\n{{ deleteTrigger 0 }}\n')),(0,r.yg)("h2",{id:"author"},"Author"),(0,r.yg)("p",null,"This custom command was written by ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/jo3-l"},"@jo3-l")," and ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/Satty9361"},"@Satty9361"),"."))}p.isMDXComponent=!0}}]);