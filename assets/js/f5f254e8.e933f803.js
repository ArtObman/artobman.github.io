"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2336],{5680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>m});var r=t(6540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),d=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=d(e.components);return r.createElement(s.Provider,{value:n},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=d(t),u=a,m=p["".concat(s,".").concat(u)]||p[u]||g[u]||i;return t?r.createElement(m,o(o({ref:n},c),{},{components:t})):r.createElement(m,o({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var d=2;d<i;d++)o[d]=t[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9227:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var r=t(8168),a=(t(6540),t(5680));const i={title:"Reaction Handler"},o=void 0,l={unversionedId:"leveling/reaction-handler",id:"leveling/reaction-handler",title:"Reaction Handler",description:"This command handles reactions for the leveling system.",source:"@site/docs/leveling/reaction-handler.md",sourceDirName:"leveling",slug:"/leveling/reaction-handler",permalink:"/leveling/reaction-handler",draft:!1,editUrl:"https://github.com/yagpdb-cc/yagpdb-cc/edit/master/website/docs/leveling/reaction-handler.md",tags:[],version:"current",frontMatter:{title:"Reaction Handler"},sidebar:"sidebar",previous:{title:"Message Handler",permalink:"/leveling/message-handler"},next:{title:"Set XP/Level",permalink:"/leveling/set-xp"}},s={},d=[{value:"Trigger",id:"trigger",level:2},{value:"Code",id:"code",level:2},{value:"Author",id:"author",level:2}],c={toc:d},p="wrapper";function g(e){let{components:n,...t}=e;return(0,a.yg)(p,(0,r.A)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"This command handles reactions for the leveling system."),(0,a.yg)("h2",{id:"trigger"},"Trigger"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Type:")," ",(0,a.yg)("inlineCode",{parentName:"p"},"Reaction"),(0,a.yg)("br",null),"\n",(0,a.yg)("strong",{parentName:"p"},"Additional options:")," ",(0,a.yg)("inlineCode",{parentName:"p"},"Added reactions only")),(0,a.yg)("h2",{id:"code"},"Code"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-gotmpl",metastring:"file=../../../src/leveling/reaction_handler.go.tmpl",file:"../../../src/leveling/reaction_handler.go.tmpl"},'{{/*\n    Handles reactions for the leveling system.\n    See <https://yagpdb-cc.github.io/leveling/reaction-handler> for more information.\n\n    Author: jo3-l <https://github.com/jo3-l>\n*/}}\n\n{{ $action := .Reaction.Emoji.Name }} {{/* The action being ran */}}\n{{ $validEmojis := cslice "\u25b6\ufe0f" "\u25c0\ufe0f" }} {{/* Valid emojis */}}\n{{ $isValid := false }} {{/* Whether this is actually a valid embed / leaderboard embed */}}\n{{ $page := 0 }} {{/* The current page */}}\n{{ with and (eq .ReactionMessage.Author.ID .BotUser.ID) .ReactionMessage.Embeds }} {{/* Checks for validity */}}\n    {{ $embed := index . 0 }} {{/* The first embed */}}\n    {{ if and (eq $embed.Title "\u276f Leaderboard") $embed.Footer }} {{/* More checks */}}\n        {{ $page = reFind `\\d+` $embed.Footer.Text }} {{/* We presume that this is valid, and get the page num */}}\n        {{ $isValid = true }} {{/* Yay, it is valid */}}\n    {{ end }}\n{{ end }}\n{{ if and (in $validEmojis $action) $isValid $page }} {{/* Even more checks for validity... */}}\n    {{ deleteMessageReaction nil .ReactionMessage.ID .User.ID $action }}\n    {{ if eq $action "\u25b6\ufe0f" }} {{ $page = add $page 1 }} {{/* Update page according to emoji */}}\n    {{ else }} {{ $page = sub $page 1 }} {{ end }}\n    {{ if ge $page 1 }} {{/* Otherwise, dbTopEntries throws error due to negative skip */}}\n        {{ $skip := mult (sub $page 1) 10 }} {{/* Get skip */}}\n        {{ $users := dbTopEntries "xp" 10 $skip }} {{/* Fetch entries */}}\n        {{ if (len $users) }} {{/* If there are users on this page, proceed */}}\n            {{ $rank := $skip }}\n            {{ $display := "" }} {{/* Display for leaderboard embed */}}\n            {{ range $users }} {{- /* Loop over users and format */}}\n                {{- $xp := toInt .Value }} {{- /* The user XP */}}\n                {{- $rank = add $rank 1 }} {{- /* The user rank */}}\n                {{- $display = printf "%s\\n\u2022 **%d.** [%s](https://yagpdb.xyz) :: Level %d (%d XP)"\n                    $display $rank .User.String (toInt (roundFloor (mult 0.1 (sqrt $xp)))) $xp\n                }} {{- /* Format display */ -}}\n            {{ end }}\n            {{ editMessage nil .ReactionMessage.ID (cembed\n                "title" "\u276f Leaderboard"\n                "thumbnail" (sdict "url" "https://i.imgur.com/mJ7zu6k.png")\n                "color" 14232643\n                "description" $display\n                "footer" (sdict "text" (joinStr "" "Page " $page))\n            ) }} {{/* Edit embed */}}\n        {{ end }}\n    {{ end }}\n{{ end }}\n')),(0,a.yg)("h2",{id:"author"},"Author"),(0,a.yg)("p",null,"This custom command was written by ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/jo3-l"},"@jo3-l"),"."))}g.isMDXComponent=!0}}]);