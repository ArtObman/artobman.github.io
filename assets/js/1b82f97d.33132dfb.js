"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2210],{5680:(e,n,t)=>{t.d(n,{xA:()=>d,yg:()=>u});var r=t(6540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var m=r.createContext({}),l=function(e){var n=r.useContext(m),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=l(e.components);return r.createElement(m.Provider,{value:n},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,m=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=l(t),p=a,u=c["".concat(m,".").concat(p)]||c[p]||g[p]||i;return t?r.createElement(u,o(o({ref:n},d),{},{components:t})):r.createElement(u,o({ref:n},d))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=p;var s={};for(var m in n)hasOwnProperty.call(n,m)&&(s[m]=n[m]);s.originalType=e,s[c]="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},907:(e,n,t)=>{t.d(n,{y:()=>i});var r=t(6540);const a=["Administrator","ManageServer","ReadMessages","SendMessages","SendTTSMessages","ManageMessages","EmbedLinks","AttachFiles","ReadMessageHistory","MentionEveryone","VoiceConnect","VoiceSpeak","VoiceMuteMembers","VoiceDeafenMembers","VoiceMoveMembers","VoiceUseVAD","ManageNicknames","ManageRoles","ManageWebhooks","ManageEmojis","CreateInstantInvite","KickMembers","BanMembers","ManageChannels","AddReactions","ViewAuditLogs"],i=()=>r.createElement("details",null,r.createElement("summary",null,r.createElement("strong",null,"Available permissions:")),r.createElement("ul",null,a.map((e=>r.createElement("li",null,r.createElement("code",null,e))))))},4392:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>m,toc:()=>d});var r=t(8168),a=(t(6540),t(5680)),i=t(907);const o={title:"Nickname Moderation"},s=void 0,m={unversionedId:"moderation/nickname-moderation",id:"moderation/nickname-moderation",title:"Nickname Moderation",description:"Helps moderate inappropriate or unpingable nicknames.",source:"@site/docs/moderation/nickname-moderation.mdx",sourceDirName:"moderation",slug:"/moderation/nickname-moderation",permalink:"/moderation/nickname-moderation",draft:!1,editUrl:"https://github.com/yagpdb-cc/yagpdb-cc/edit/master/website/docs/moderation/nickname-moderation.mdx",tags:[],version:"current",frontMatter:{title:"Nickname Moderation"},sidebar:"sidebar",previous:{title:"Lockdown",permalink:"/moderation/lockdown"},next:{title:"Notes",permalink:"/moderation/notes"}},l={},d=[{value:"Trigger",id:"trigger",level:2},{value:"Usage",id:"usage",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Code",id:"code",level:2},{value:"Author",id:"author",level:2}],c={toc:d},g="wrapper";function p(e){let{components:n,...t}=e;return(0,a.yg)(g,(0,r.A)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"Helps moderate inappropriate or unpingable nicknames.\nInstead of having to change members' nicknames manually, staff members can moderate nicknames with a single command."),(0,a.yg)("admonition",{type:"note"},(0,a.yg)("p",{parentName:"admonition"},"Due to limitations for editing nicknames in YAGPDB template scripting, the offending member's nickname will be edited once they send another message, not when you run the command.")),(0,a.yg)("h2",{id:"trigger"},"Trigger"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Type:")," ",(0,a.yg)("inlineCode",{parentName:"p"},"Regex"),(0,a.yg)("br",null),"\n",(0,a.yg)("strong",{parentName:"p"},"Trigger:")," ",(0,a.yg)("inlineCode",{parentName:"p"},"\\A"),(0,a.yg)("br",null),"\n",(0,a.yg)("strong",{parentName:"p"},"Additional options:")," ",(0,a.yg)("inlineCode",{parentName:"p"},"Errors as custom command output")," disabled"),(0,a.yg)("h2",{id:"usage"},"Usage"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"-modnick <user>")," - Changes the nickname of the user provided."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"-unmodnick <user>")," - Changes the nickname of a user previously moderated using this command to its original value."),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"-nick-numerreset")," - Makes the next moderated nickname start at ",(0,a.yg)("inlineCode",{parentName:"li"},"1"),".")),(0,a.yg)("h2",{id:"configuration"},"Configuration"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"$name"),(0,a.yg)("br",null),"\nWhat should be in front of the auto-generated nicknames when a nickname is moderated.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"$padding"),(0,a.yg)("br",null),"\nHow many digits the number should have.",(0,a.yg)("br",null),"\n",(0,a.yg)("strong",{parentName:"p"},"Recommended value:")," Between 3 and 7.")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"$modPerms"),(0,a.yg)("br",null),"\nPermissions required to moderate nicknames."),(0,a.yg)(i.y,{mdxType:"AvailablePermissionsDisplay"}))),(0,a.yg)("h2",{id:"code"},"Code"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-gotmpl",metastring:"file=../../../src/moderation/nickname_moderation.go.tmpl",file:"../../../src/moderation/nickname_moderation.go.tmpl"},'{{/*\n    Moderates nicknames.\n    See <https://yagpdb-cc.github.io/moderation/nickname-moderation> for more information.\n\n    Author: 2x2Master1 <https://github.com/2x2master1>\n*/}}\n\n{{/* Configurable values */}}\n{{$name := "Moderated Nickname"}}\n{{$padding := "5"}}\n{{$modPerms := .Permissions.ManageMessages}}\n{{/* End of configurable values */}}\n\n{{$mod := hasPermissions $modPerms}}\n{{$prefix := .ServerPrefix}}\n{{if .CmdArgs}}\n    {{if eq (lower (index .CmdArgs 0)) (print $prefix "modnick")}}\n        {{if ge (len .CmdArgs) 2}}\n            {{if $mod}}\n            {{((userArg (index .CmdArgs 1)).String)}}\'s nickname will be moderated when they next send a message.\n            {{dbSet ((userArg (index .CmdArgs 1)).ID) "nick" 1}}\n            {{else}}\n            {{sendMessage nil (print .User.Mention ", you can\'t use that.")}}\n            {{end}}\n        {{else}}\n        {{sendMessage nil (print .User.Mention ", please provide a user!")}}\n        {{end}}\n    {{else if (eq (lower (index .CmdArgs 0)) (print $prefix "unmodnick"))}}\n        {{if ge (len .CmdArgs) 2}}\n            {{if $mod}}\n            {{((userArg (index .CmdArgs 1)).String)}}\'s nickname will not be moderated anymore.\n            {{dbSet ((userArg (index .CmdArgs 1)).ID) "nick" 0}}\n            {{else}}\n            {{sendMessage nil (print .User.Mention ", you can\'t use that.")}}\n            {{end}}\n        {{else}}\n        {{sendMessage nil (print .User.Mention ", please provide a user!")}}\n        {{end}}\n    {{else if (eq (lower (index .CmdArgs 0)) (print $prefix "nick-numberreset"))}}\n        {{if $mod}}\n        {{dbSet 0 "mnick" 0}}\n        {{addReactions "\u2705"}}\n        {{else}}\n        {{sendMessage nil (print .User.Mention ", you can\'t use that.")}}\n        {{end}}\n    {{else if eq (toInt ((dbGet .User.ID "nick").Value)) 1}}\n        {{if or (ne (reFind $name .Member.Nick) $name) (not .Member.Nick)}}\n        {{$db := dbIncr 0 "mnick" 1}}\n        {{$db2 := toInt ($db)}}\n        {{$v := printf (print "%0" $padding "d") $db2}}\n        {{editNickname (print $name " " $v)}}\n        {{end}}\n    {{end}}\n{{end}}\n')),(0,a.yg)("h2",{id:"author"},"Author"),(0,a.yg)("p",null,"This custom command was written by ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/2x2master1"},"@2x2Master1"),"."))}p.isMDXComponent=!0}}]);